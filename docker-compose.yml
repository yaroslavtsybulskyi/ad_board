services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
      - ./media:/app/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - rabbitmq

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

  celery:
    build: .
    command: celery -A ad_board worker --loglevel=info --concurrency=2
    volumes:
      - .:/app
      - ./media:/app/media
    env_file:
      - .env
    depends_on:
      - db
      - rabbitmq

  celery-beat:
    build:
      context: .
    command: celery -A ad_board beat --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - web
      - db
      - rabbitmq
    restart: always

  flower:
    image: mher/flower:2.0.1
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
    ports:
      - "5555:5555"
    depends_on:
      - rabbitmq
    restart: always

volumes:
  postgres_data: